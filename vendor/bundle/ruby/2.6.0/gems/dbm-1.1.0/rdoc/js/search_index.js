var search_data = {"index":{"searchIndex":["dbm","dbmerror","object","headers","[]()","[]=()","clear()","close()","closed?()","delete()","delete_if()","each()","each_key()","each_pair()","each_value()","empty?()","fetch()","has_key?()","has_value?()","include?()","invert()","key()","key?()","keys()","length()","member?()","new()","open()","reject()","reject!()","replace()","select()","shift()","size()","store()","to_a()","to_hash()","update()","value?()","values()","values_at()","makefile"],"longSearchIndex":["dbm","dbmerror","object","headers","dbm#[]()","dbm#[]=()","dbm#clear()","dbm#close()","dbm#closed?()","dbm#delete()","dbm#delete_if()","dbm#each()","dbm#each_key()","dbm#each_pair()","dbm#each_value()","dbm#empty?()","dbm#fetch()","dbm#has_key?()","dbm#has_value?()","dbm#include?()","dbm#invert()","dbm#key()","dbm#key?()","dbm#keys()","dbm#length()","dbm#member?()","dbm::new()","dbm::open()","dbm#reject()","dbm#reject!()","dbm#replace()","dbm#select()","dbm#shift()","dbm#size()","dbm#store()","dbm#to_a()","dbm#to_hash()","dbm#update()","dbm#value?()","dbm#values()","dbm#values_at()",""],"info":[["DBM","","DBM.html","","<p>Introduction\n<p>The DBM class provides a wrapper to a Unix-style dbm or Database Manager library.\n<p>Dbm databases …\n"],["DBMError","","DBMError.html","","<p>Exception class used to return errors from the dbm library.\n"],["Object","","Object.html","",""],["headers","","headers.html","",""],["[]","DBM","DBM.html#method-i-5B-5D","(p1)","<p>Return a value from the database by locating the key string provided.  If the key is not found, returns …\n"],["[]=","DBM","DBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string key provided.\n"],["clear","DBM","DBM.html#method-i-clear","()","<p>Deletes all data from the database.\n"],["close","DBM","DBM.html#method-i-close","()","<p>Closes the database.\n"],["closed?","DBM","DBM.html#method-i-closed-3F","()","<p>Returns true if the database is closed, false otherwise.\n"],["delete","DBM","DBM.html#method-i-delete","(p1)","<p>Deletes an entry from the database.\n"],["delete_if","DBM","DBM.html#method-i-delete_if","()","<p>Deletes all entries for which the code block returns true. Returns self.\n"],["each","DBM","DBM.html#method-i-each","()","<p>Calls the block once for each [key, value] pair in the database. Returns self.\n"],["each_key","DBM","DBM.html#method-i-each_key","()","<p>Calls the block once for each key string in the database. Returns self.\n"],["each_pair","DBM","DBM.html#method-i-each_pair","()","<p>Calls the block once for each [key, value] pair in the database. Returns self.\n"],["each_value","DBM","DBM.html#method-i-each_value","()","<p>Calls the block once for each value string in the database. Returns self.\n"],["empty?","DBM","DBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty, false otherwise.\n"],["fetch","DBM","DBM.html#method-i-fetch","(p1, p2 = v2)","<p>Return a value from the database by locating the key string provided.  If the key is not found, returns …\n"],["has_key?","DBM","DBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n"],["has_value?","DBM","DBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the database contains the specified string value, false otherwise.\n"],["include?","DBM","DBM.html#method-i-include-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n"],["invert","DBM","DBM.html#method-i-invert","()","<p>Returns a Hash (not a DBM database) created by using each value in the database as a key, with the corresponding …\n"],["key","DBM","DBM.html#method-i-key","(p1)","<p>Returns the key for the specified value.\n"],["key?","DBM","DBM.html#method-i-key-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n"],["keys","DBM","DBM.html#method-i-keys","()","<p>Returns an array of all the string keys in the database.\n"],["length","DBM","DBM.html#method-i-length","()","<p>Returns the number of entries in the database.\n"],["member?","DBM","DBM.html#method-i-member-3F","(p1)","<p>Returns true if the database contains the specified key, false otherwise.\n"],["new","DBM","DBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Open a dbm database with the specified name, which can include a directory path. Any file extensions …\n"],["open","DBM","DBM.html#method-c-open","(*args)","<p>Open a dbm database and yields it if a block is given. See also <code>DBM.new</code>.\n"],["reject","DBM","DBM.html#method-i-reject","()","<p>Converts the contents of the database to an in-memory Hash, then calls Hash#reject with the specified …\n"],["reject!","DBM","DBM.html#method-i-reject-21","()","<p>Deletes all entries for which the code block returns true. Returns self.\n"],["replace","DBM","DBM.html#method-i-replace","(p1)","<p>Replaces the contents of the database with the contents of the specified object. Takes any object which …\n"],["select","DBM","DBM.html#method-i-select","()","<p>Returns a new array consisting of the [key, value] pairs for which the code block returns true.\n"],["shift","DBM","DBM.html#method-i-shift","()","<p>Removes a [key, value] pair from the database, and returns it. If the database is empty, returns nil. …\n"],["size","DBM","DBM.html#method-i-size","()","<p>Returns the number of entries in the database.\n"],["store","DBM","DBM.html#method-i-store","(p1, p2)","<p>Stores the specified string value in the database, indexed via the string key provided.\n"],["to_a","DBM","DBM.html#method-i-to_a","()","<p>Converts the contents of the database to an array of [key, value] arrays, and returns it.\n"],["to_hash","DBM","DBM.html#method-i-to_hash","()","<p>Converts the contents of the database to an in-memory Hash object, and returns it.\n"],["update","DBM","DBM.html#method-i-update","(p1)","<p>Updates the database with multiple values from the specified object. Takes any object which implements …\n"],["value?","DBM","DBM.html#method-i-value-3F","(p1)","<p>Returns true if the database contains the specified string value, false otherwise.\n"],["values","DBM","DBM.html#method-i-values","()","<p>Returns an array of all the string values in the database.\n"],["values_at","DBM","DBM.html#method-i-values_at","(*args)","<p>Returns an array containing the values associated with the given keys.\n"],["Makefile","","ext/dbm/Makefile.html","","<p>SHELL = /bin/sh\n<p># V=0 quiet, V=1 verbose.  other values don&#39;t work. V = 0 Q1 = $(V:1=) Q = $(Q1:0=@) …\n"]]}}